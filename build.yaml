targets:
  $default:
    builders:     
      ast_builder:
        enabled: false
# Read about `build.yaml` at https://pub.dev/packages/build_config
builders:
  # name of the builder
  # graphql_to_dart:
  #   # library URI containing the builder - maps to `lib/member_count_library_generator.dart`
  #   import: "package:graphql_to_dart/src/generators/builder.dart"
  #   # Name of the function in the above library to call.
  #   builder_factories: ["graphQlTypesBuilder"]
  #   build_extensions: {".graphql": [".model.dart"]}
  #   auto_apply: dependents
  #   build_to: source
  #   applies_builders: ["source_gen|combining_builder"]
  ast_generator:
    # library URI containing the builder - maps to `lib/member_count_library_generator.dart`
    import: "package:graphql_to_dart/src/generators/builder.dart"
    # Name of the function in the above library to call.
    builder_factories: ["graphQlAstBuilder"]
    # The mapping from the source extension to the generated file extension
    build_extensions: {".graphql": [".ast.g.dart"]}
    # Will automatically run on any package that depends on it
    auto_apply: dependents
    # Generate the output directly into the package, not to a hidden cache dir
    build_to: source
    applies_builders: ["source_gen|combining_builder"]
    defaults:
       options:
         schema_path: "lib/schema.graphql"
         helper_path: 'graphql/common'
         models_import_path: 'graphql/models'
         package_name: example
         graphql_endpoint: http://localhost:3000/graphql
         models_directory_path: lib/graphql/models/
         to_json_exclude_null_field: true
         use_equatable: true
         required_input_field: true
         type_override:
          Upload: String

 